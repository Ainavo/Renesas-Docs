import{_ as n,o as s,c as a,e as p}from"./app-829098b3.js";const t={},e=p(`<h1 id="第24章-内部温度传感器-tsn" tabindex="-1"><a class="header-anchor" href="#第24章-内部温度传感器-tsn" aria-hidden="true">#</a> 第24章 内部温度传感器-TSN</h1><p>本章目标</p><ul><li>了解RA6M5处理器的内部温度及其换算公式；</li><li>学会使用RASC配置内部温度传感器并获取CPU实时温度值；</li></ul><h2 id="_24-1-tsn模块的使用" tabindex="-1"><a class="header-anchor" href="#_24-1-tsn模块的使用" aria-hidden="true">#</a> 24.1 TSN模块的使用</h2><p>TSN本身集成在瑞萨RA6M5的ADC模块之中，使用TSN其实就是使用ADC0或ADC1里面的TSN通道而已。</p><p>不需要在FSP的Pins中添加TSN引脚，只需要在ADC的Stack模块中，依次进入如下配置界面：Module-&gt;Input-&gt;Channel Scan Mask，勾选“Temperature Sensor”，其它的配置和《第23章ADC与DSP》里对于ADC的配置一样。</p><p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/object_oriented_module_programming_method_in_ARM_embedded_system/chapter-24/image1.png" alt=""></p><p>用户需要重点关心的是，怎样把采样值换算为处理器的温度。这在RA6M5处理器的用户手册中有说明（用户手册第45章），换算公式：</p><p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/object_oriented_module_programming_method_in_ARM_embedded_system/chapter-24/image2.jpg" alt=""></p><p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/object_oriented_module_programming_method_in_ARM_embedded_system/chapter-24/image3.png" alt=""></p><p>典型值是4.0mV每℃，在程序中就取这个值。实际的使用中，V1是MCU的校准电压值，对于T1，厂商给的是127℃。</p><h2 id="_24-2-获取处理器内部温度实验" tabindex="-1"><a class="header-anchor" href="#_24-2-获取处理器内部温度实验" aria-hidden="true">#</a> 24.2 获取处理器内部温度实验</h2><h3 id="_24-2-1-设计目的" tabindex="-1"><a class="header-anchor" href="#_24-2-1-设计目的" aria-hidden="true">#</a> 24.2.1 设计目的</h3><p>让用户学会使用处理器的ADC采样MCU的内部温度，并了解换算公式。</p><h3 id="_24-2-2-驱动程序" tabindex="-1"><a class="header-anchor" href="#_24-2-2-驱动程序" aria-hidden="true">#</a> 24.2.2 驱动程序</h3><p>本节实验使用的是《第23章ADC与DSP》中《23.4 直流电压采样实验》的驱动程序，只是在构造ADCDev时，里面的通道值随意指定为0xFF（无需特定的通道）了，代码如下：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token keyword">struct</span> <span class="token class-name">ADCDev</span> gAdcDev <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Temperature&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span>channel <span class="token operator">=</span> <span class="token number">0xFF</span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span>Init <span class="token operator">=</span> ADCDrvInit<span class="token punctuation">,</span>
    <span class="token punctuation">.</span>Read <span class="token operator">=</span> ADCDrvRead
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码的channel值没有被使用，在ADCDrvRead函数中使用如下代码读取TSN的ADC值：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>g_adc0<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">scanStart</span><span class="token punctuation">(</span>g_adc0<span class="token punctuation">.</span>p_ctrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">ADCWaitConvCplt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">fsp_err_t</span> err <span class="token operator">=</span> g_adc0<span class="token punctuation">.</span>p_api<span class="token operator">-&gt;</span><span class="token function">read</span><span class="token punctuation">(</span>g_adc0<span class="token punctuation">.</span>p_ctrl<span class="token punctuation">,</span> ADC_CHANNEL_TEMPERATURE<span class="token punctuation">,</span> <span class="token operator">&amp;</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在第03行代码中，使用第2个参数ADC_CHANNEL_TEMPERATURE表示要读取的是TSN的采样值。</p><h3 id="_24-2-3-测试程序" tabindex="-1"><a class="header-anchor" href="#_24-2-3-测试程序" aria-hidden="true">#</a> 24.2.3 测试程序</h3><p>本次实验在获取到内部温度的采样值之后通过公式计算温度值：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">ADCAppTest</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">SystickInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">UARTDrvInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ADCDevTypeDef <span class="token operator">*</span>ptAdcDev <span class="token operator">=</span> <span class="token function">ADCGetDevice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">NULL</span> <span class="token operator">==</span> ptAdcDev<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Error. Not found ADC device!\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ptAdcDev<span class="token operator">-&gt;</span><span class="token function">Init</span><span class="token punctuation">(</span>ptAdcDev<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">uint16_t</span> buf<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        ptAdcDev<span class="token operator">-&gt;</span><span class="token function">Read</span><span class="token punctuation">(</span>ptAdcDev<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">uint16_t</span> value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">uint16_t</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            value <span class="token operator">+=</span> buf<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        value  <span class="token operator">=</span> value<span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">;</span>
        <span class="token class-name">int32_t</span>    cal127<span class="token punctuation">;</span>
        <span class="token class-name">adc_info_t</span> adc_info<span class="token punctuation">;</span>
        <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token function">R_ADC_InfoGet</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>g_adc0_ctrl<span class="token punctuation">,</span> <span class="token operator">&amp;</span>adc_info<span class="token punctuation">)</span><span class="token punctuation">;</span>
        cal127 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">int32_t</span><span class="token punctuation">)</span> adc_info<span class="token punctuation">.</span>calibration_data<span class="token punctuation">;</span>
        <span class="token keyword">float</span> slope <span class="token operator">=</span> <span class="token number">4.0</span><span class="token operator">/</span><span class="token number">1000</span><span class="token punctuation">;</span>
        <span class="token keyword">float</span> v1<span class="token operator">=</span> <span class="token number">3.3</span> <span class="token operator">*</span> cal127 <span class="token operator">/</span> <span class="token number">4096</span><span class="token punctuation">;</span>
        <span class="token keyword">float</span> vs <span class="token operator">=</span> <span class="token number">3.3</span> <span class="token operator">*</span> value <span class="token operator">/</span><span class="token number">4096</span><span class="token punctuation">;</span>
        <span class="token keyword">float</span> temperature <span class="token operator">=</span> <span class="token punctuation">(</span>vs <span class="token operator">-</span> v1<span class="token punctuation">)</span> <span class="token operator">/</span> slope <span class="token operator">+</span> <span class="token number">127</span><span class="token punctuation">;</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;CPU Temperature: %f℃\\r\\n&quot;</span><span class="token punctuation">,</span> temperature<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">HAL_Delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>第14~21行：连续采样4次算出内部温度采样值的平均值；</li><li>第23~25行：获取厂方校验值；</li><li>第26~29行：计算公式中各项的数值，并且按照公式计算出温度值；</li></ul><h3 id="_24-2-4-测试结果" tabindex="-1"><a class="header-anchor" href="#_24-2-4-测试结果" aria-hidden="true">#</a> 24.2.4 测试结果</h3><p>在hal_entry()中调用测试函数，将编译出来的二进制可执行文件烧录到板子上并运行，会得到例如下图这样的打印信息：</p><p><img src="http://photos.100ask.net/renesas-docs/DShanMCU_RA6M5/object_oriented_module_programming_method_in_ARM_embedded_system/chapter-24/image4.png" alt=""></p>`,27),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","chapter24.html.vue"]]);export{r as default};
